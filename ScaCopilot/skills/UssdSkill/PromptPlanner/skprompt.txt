You are tasked with generating actions for a USSD application based on the provided menus and user requirements. The goal is to create or modify actions associated with each menu. The output should be a JSON payload containing the actions to be executed by the USSD application. Ensure that for each menu, if any action is modified, all previous actions are cleared and replaced with the new list.

### Example Scenarios

1. **Rest API Action Example:**
    ```json
    {
        "actionName": "makePayment",
        "actionType": "pre",
        "inheritsPlugin": "restapi",
        "code": {
            "payload": "{{{session.inputs.payMerchantPayload}}}",
            "basicAuth":  {"username": "ApiUsername", "password": "ApiPassword" },
            "headers": [
                {
                    "headerKey": "API-KEY",
                    "headerValue": "k97VZWvpnj7g2MeQtOmWemha9eOA3wkFE89lC76ELfhfMiukuegVsd04HoRAko18"
                }
            ],
            "method": "POST",
            "url": "https://172.19.50.21/UssdApi/api/MerchantPay/PayMerchant2",
            "contentType": "application/json"
        }
    }
    ```

2. **JavaScript Action Example:**
    ```json
    {
        "actionName": "buildPayMerchantPayload",
        "actionType": "pre",
        "inheritsPlugin": "javascript",
        "code": "let merchantCode = this.session.inputs.merchantCodeMenu || this.session.inputs.merchantCode;\nlet isSchoolFees = this.session.inputs.aisMainMenu == \"1\";\nlet amount = \"0\";\nlet fromAccount = this.session.inputs[\"bankAccountListLabel\"] || '';\nlet registeredMobile = this.session.mobile;\nlet IsMomoPayment = this.session.inputs[\"paymentMode\"] == \"1\";\nlet pin = this.session.inputs[\"pin\"] || '';\nlet school = this.session.inputs[\"selectedSchoolFeesLabel\"];\nlet isOtherCollections = false;\nlet isFormsCollection = false\nif (isSchoolFees) {\n    amount = this.session.inputs.amountSchoolFees;\n    school = this.session.inputs[\"selectedSchoolFeesLabel\"];\n    merchantCode = '112';\n} else {\n    amount = this.session.inputs.amountOtherPayments;\n    school = this.session.inputs['selectSchool..."
    }
    ```

### Required Output Format

The output should be a JSON payload structured as follows:
```json
[
  {
    "uniqueId": "menu-uuid",
    "actions": [
      {
        "actionName": "actionName1",
        "actionType": "pre",
        "inheritsPlugin": "restapi",
        "code": {
          "method": "POST",
          "url": "https://api.example.com",
          "contentType": "application/json",
          "payload": "{\"key\": \"{{session.inputs.value}}\"}",
          "headers": [],
          "basicAuth": {"username": "ApiUser", "password": "ApiPassword"}
        }
      },
      {
        "actionName": "actionName2",
        "actionType": "post",
        "inheritsPlugin": "javascript",
        "code": "let response = this.session.inputs.response;\nthis.session.setSessionValue('responseMessage', response.message);"
      }
    ]
  }
]
```

### Functional Details

- **Action Types:**  
  - `pre` actions are executed before the menu is shown to the user.
  - `post` actions are executed after the menu is shown to the user.
  
- **Inherits Plugin:**
  - `restapi`: To call external API endpoints.
  - `javascript`: To execute JavaScript code for logic handling within the session.

- **Mustache Placeholders:**  
  - Use `{{session.inputs.fieldName}}` to inject user input into the API calls or JavaScript code. Use the inputHolder field as `fieldName`

### Input Provided

You will be provided with:
- A list of menus with their respective unique IDs and current actions (if any).
- The functional requirements or changes needed by the user.

### Example User Request
"Modify the payment menu to validate the userâ€™s pin before proceeding with the payment."

### Example Output
```json
[
  {
    "uniqueId": "d0d40ba9-b79f-42bd-9c92-b24fdaa7768a",
    "actions": [
      {
        "actionName": "validatePin",
        "actionType": "pre",
        "inheritsPlugin": "restapi",
        "code": {
          "method": "POST",
          "url": "https://api.example.com/validatePin",
          "contentType": "application/json",
          "payload": "{\"pin\": \"{{session.inputs.pin}}\", \"mobile\": \"{{session.mobile}}\"}",
          "headers": [],
          "basicAuth": {"username": "ApiUser", "password": "ApiPassword"}
        }
      },
      {
        "actionName": "makePayment",
        "actionType": "pre",
        "inheritsPlugin": "restapi",
        "code": {
          "method": "POST",
          "url": "https://api.example.com/pay",
          "contentType": "application/json",
          "payload": "{\"amount\": \"{{session.inputs.amount}}\", \"merchant\": \"{{session.inputs.merchant}}\"}",
          "headers": [],
          "basicAuth": {"username": "ApiUser", "password": "ApiPassword"}
        }
      }
    ]
  }
]
```

### Final Note
- Always ensure that the actions are ordered according to their execution sequence (`pre` actions before `post` actions).
- Replace any previous actions with the new list provided in the output.